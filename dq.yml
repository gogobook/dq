version: "1"
jobs:
  mail:
    image: shrikrishna/dq_sendmail:latest
    command: >
      --smtp-user='{{smtp_user}}'
      --smtp-pass='{{smtp_pass}}'
      --smtp-domain='{{smtp_domain}}'
      --from='{{from}}'
      --to='{{to}}'
      --subject='{{subject}}'
      --body='{{body}}'
      --tls={{is_tls}}
    remove: true
    priority: "high"
    attempts: 10
    backoff: true
    ttl: 30000
    batch: 5

  serverless_example:
    image: shrikrishna/dq_serverless_example:latest
    service:
      port: 3000
      max_replica: 5
      endpoints:
        vote:
          identifier: "root"
          uri: "/"
          method: "GET"
  # serverless_vote:
  #   image: shrikrishna/dq_serverless_vote:latest
  #   priority: "normal"
  #   attempts: 10
  #   backoff: true
  #   ttl: 30000
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   service:
  #     port: 3000
  #     max_replica: 5
  #     endpoints:
  #       vote:
  #         uri: "/vote"
  #         method: "POST"
  #       result:
  #         uri: "/result"
  #         method: "GET"

  logrotate:
    image: logrotater:latest
    repeat: "0 0 1 * *"
    volumes:
      - "/var/log/mylog:/var/log/logrotater"

  mongobackup:
    image: mongo:latest
    command: "mongodump -o /data/backup"
    repeat: "0 0 1 * *"
    volumes:
      - "/data/db:/data/db"
      - "/data/backup:/data/backup"


  test:
    image: test:latest
    command: "hello world"
    repeat: "*/2 * * * *"
    volumes:
      - "/data/db:/data/db"
      - "/data/backup:/data/backup"
    remove: true
    priority: "high"
    attempts: 10
    backoff: true
    ttl: 5000
dq:
  redis:
    port: 6379
    host: "redis"
    db: 3
  queue:
    watch_interval: 10000
  ui:
    enabled: true
    title: "DQ"
    port: 3001
